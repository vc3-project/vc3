- name: Login + install latest version of Python 3.6, Jupyter, and all required dependencies
  hosts: all
  remote_user: "{{ setup_user_name }}"
  become: yes
  become_user: root

  vars: 

    #request_name: 'somename'  ----> CALL AS: ansible-playbook --extra-vars 'request_name=somename' ....
    cvmfs_quota_limit: 20000
    cvmfs_http_proxy: 'http://squid.grid.uchicago.edu:3128'


  tasks:
    - name: Set hostname
      hostname:
        name: "{{ request_name }}.virtualclusters.org"

    - name: Configure HTCondor
      template:
        src: templates/condor_config.local.j2
        dest: /etc/condor/condor_config.local
        owner: root
        group: root
        mode: 0644
      notify: restart htcondor

    - meta: flush_handlers
  
    - name: create condor password
      shell: condor_store_cred -c add -p "{{ lookup('password', '/dev/null length=64') }}"
  
    - name: fetch condor password file
      fetch:
        src:  /etc/condor/condor_password
        dest: "{{ condor_password_file }}"
        flat: yes

    - name: Add auto.cvmfs
      lineinfile:
        path: /etc/auto.master
        regexp: '^\/cvmfs'
        line: '/cvmfs /etc/auto.cvmfs'
      notify: restart autofs

    - name: Copy CVMFS config
      template:
        src: templates/cvmfs_default_local.j2
        dest: /etc/cvmfs/default.local
        owner: root
        group: root
        mode: 0644
    - meta: flush_handlers

    - name: Add VC3 users
      user:
        name: "{{ item.key }}"
        comment: "{{ item.key }}"
        state: present
      with_dict: "{{ production_keys }}"

    - name: Add VC3 user keys
      authorized_key:
        user: "{{ item.key }}"
        state: present
        key: "{{ item.value }}"
      with_dict: "{{ production_keys }}"

    - name: Add MOTD template
      template:
        src: templates/motd.j2
        dest: /etc/motd
        owner: root
        group: root
        mode: 0644

    - name: Install vc3-builder
      copy:
        src:  /bin/vc3-builder
        dest: /bin/vc3-builder
        mode: 0755

    - name: Install vc3 environments
      shell: /bin/vc3-builder --var TERM=linux --install /opt/vc3/root --distfiles /opt/vc3/distfiles --home /opt/vc3/home  --env-to /opt/vc3/home/vc3-environments "{{ builder_options }}"
      when: builder_options is defined 

    - name: Set vc3 python paths
      lineinfile:
        path: /usr/lib/python2.7/site-packages/vc3.pth
        line: /opt/vc3/home/.local/lib/python2.7/site-packages 
        create: yes
      when: builder_options is defined 

    - name: Install vc3 profile
      file:
        src:  /opt/vc3/home/vc3-environments.env
        dest: /etc/profile.d/vc3-environments.010.env.sh
        state: link
      when: builder_options is defined 

    - name: Install vc3 prologues
      file:
        src:  /opt/vc3/home/vc3-environments.prologue
        dest: /etc/profile.d/vc3-environments.020.prologue.sh
        state: link
      when: builder_options is defined 

    

    # BEGIN python3 and jupyterhub setup
    # INSTALL pre-reqs
    - name: Install IUS repo
      yum:
        name: https://centos7.iuscommunity.org/ius-release.rpm
        state: present

    - name: Install python3.6
      yum:
        name: python36u
        state: latest
    
    - name: Install python3.6 dev package
      yum:
        name: python36u-devel
    
    - name: Install pip
      yum:
        name: python36u-pip

    - name: Upgrade pip
      pip:
        name: pip
        extra_args: --upgrade
        executable: pip3.6

    - name: Install node
      yum:
        name: nodejs

    - name: Install configurable-http-proxy
      npm:
        name: configurable-http-proxy
        global: yes
    


    # INSTALL AND SET UP JUPYTERHUB

    - name: Install jupyterhub
      pip:
        name: jupyterhub
        state: latest
        executable: pip3.6

    - name: make dir /etc/.jupyterhub/
      command: mkdir -p '/etc/.jupyterhub'

    - name: Configure jupyter
      copy: src="./config/jupyterhub_config.py"  dest="/etc/.jupyterhub/jupyterhub_config.py"

    - name: Generate openssl certificate
      command: "openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \ -subj '/C=US/ST=Illinois/L=Chicago/O=UoC/CN=notebookserver' \ -keyout /etc/.jupyterhub/jupyterhub.key  -out /etc/.jupyterhub/jupyterhub.crt"


    # JUPYTERHUB SERVICE

    - name: copy jupyter.service to client
      copy: src="./config/jupyterhub.service"  dest="/usr/lib/systemd/system/jupyterhub.service"



    # Ensures service is restarted on boot/crash

    - name: add to systemctl
      command: systemctl enable jupyterhub.service

    - name: reload systemctl
      command: systemctl daemon-reload
    
    - name: restart systemctl
      command: systemctl restart jupyterhub.service


  handlers:
  - name: restart htcondor
    service: name=condor state=restarted
  - name: restart autofs
    service: name=autofs state=restarted
